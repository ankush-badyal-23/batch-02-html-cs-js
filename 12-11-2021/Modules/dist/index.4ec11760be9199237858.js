(()=>{"use strict";class t{constructor(t,s){this.x=t,this.y=s}set(...t){if(1===t.length){const s=t[0];this.x=s,this.y=s}else this.x=t[0],this.y=t[1];return this}hypotenuse(t){return Math.sqrt(Math.pow(this.x-t.x,2)+Math.pow(this.y-t.y,2))}distance(s){return new t(Math.abs(this.x-s.x),Math.abs(this.y-s.y))}}class s extends class{constructor(s){this.ctx=s,this.scale=new t(1,1)}get x(){return this._x}set x(t){this._x=t}get y(){return this._y}set y(t){this._y=t}get scale(){return this._scale}set scale(t){this._scale=t}get width(){return this._width}set width(t){this._width=t}get height(){return this._height}set height(t){this._height=t}get strokeColor(){return this._strokeColor}set strokeColor(t){this._strokeColor=t}get strokeWidth(){return this._strokeWidth}set strokeWidth(t){this._strokeWidth=t}}{update(){}draw(){this.ctx.beginPath(),this.strokeColor&&(this.ctx.strokeStyle=this.strokeColor),this.strokeWidth&&(this.ctx.lineWidth=this.strokeWidth),this.ctx.moveTo(this.x,this.y),this.ctx.lineTo(this.width*this.scale.x,this.height*this.scale.y),this.ctx.stroke(),this.ctx.closePath()}}class e{constructor(){this.isMouseDown=!1,this.canvas=document.getElementById("my-canvas"),this.ctx=this.canvas.getContext("2d")}start(){window.addEventListener("keyup",(t=>this.onKeyUp(t))),this.canvas.addEventListener("mousedown",this.onMouseDown.bind(this)),this.canvas.addEventListener("mouseup",this.onMouseUp.bind(this));const t=()=>{this.update(),this.draw(),requestAnimationFrame(t)};t()}update(){}draw(){if(this.restoreSnapshot(),this.startPoint&&this.endPoint&&"line"===this.drawCommand){const t=new s(this.ctx);t.x=this.startPoint.x,t.y=this.startPoint.y,t.width=this.endPoint.distance(this.startPoint).x,t.height=this.endPoint.distance(this.startPoint).y,t.draw()}}onKeyUp(t){switch(t.code){case"KeyL":this.drawCommand="line";break;case"KeyR":this.drawCommand="rect";break;case"KeyC":this.drawCommand="circ"}}onMouseDown(s){this.canvas.onmousemove=this.onMouseMove.bind(this),this.saveSnapshot(),this.startPoint=new t(s.offsetX,s.offsetY)}onMouseMove(s){this.endPoint=new t(s.offsetX,s.offsetY)}onMouseUp(t){this.restoreSnapshot(),this.draw(),this.canvas.onmousemove=null,this.endPoint=null,this.startPoint=null}saveSnapshot(){this.snapShot=this.ctx.getImageData(0,0,this.canvas.width,this.canvas.height)}restoreSnapshot(){this.ctx.putImageData(this.snapShot,0,0)}}addEventListener("load",(()=>{(new e).start()}))})();